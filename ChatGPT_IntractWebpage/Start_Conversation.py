from ChatGPT_IntractWebpage_Class import ChatGPTClass
import easygui
import pyperclip


file_address = ""

#---------------------------------
file_address = easygui.fileopenbox()
#---------------------------------


chatGPTClass = ChatGPTClass()

chatGPTClass.start_chat_load()



question='List all the protein-protein interactions (PPIs) described in the paper? described in the paper.'

Answer_percentage = "10%"


file_address_Backup = file_address

# it means first tab is user and the second one is chatgpt
user_asking = True

user_respons = ""

gpt_respons = f"""



   write only 1 line about the type of file is attaching, for example 'This is a PFD file.'.
   
   In the following lines, write this question: "{question}".
  
"""

print(file_address)

pyperclip.copy(gpt_respons)

while not ("Finish" in user_respons and user_respons.splitlines() and "Finish" in user_respons.splitlines()[-1]):


    if user_asking:

        temp_msg = f"""

                        -Imagine you are a supervisor, and you must analyze answer based on the contents of an attached file from another AI. Your goal is to read and analyze the othe AI's aswer to your question, ensuring the aswer completly generated by the other AI and not by you.

                        - **Important Note:** Do not tell me anything, explain your actions, or describe your intentions. Just analyze the responses from the other AI and work independently to achieve your goal.

                       - Guide the other AI to provide answers to your question ("{question}"). Try and try and try... untile you get your answers 
                                              
                        - Do not explain anything to me. Focus solely on guiding the other AI to get your answers, aiming to meet over {Answer_percentage}% of your expectations.

                        - In each response, you must check and analyze to verify the answer. If it satisfies your requirements, simply write "Finish."
                        
                        - Remember, it is crucial that the other AI finds your answer. You must act like a supervisor, guiding, but everything must be done by the other AI, not manually by you. Do not suggest any manual tasks to the other AI.
                        
                        - Try to get your answer in less than 10 interactions. If the answer meets over {Answer_percentage}% of your expectations, write "Finish." Avoid asking the same question repeatedly.
                        
                        - Do not explain anything or explain what you are doing. Just analyze the other AI's answer and work independently. 
                        
                        - If the other AI answers your question satisfactorily, write "Finish."
                        
                
                Below is its answer to your previous request:
                [
                {
                    pyperclip.paste()
                }
                ]
            """

        aa = pyperclip.paste()

        if user_respons != "":
            #temp_msg = temp_msg + aa
            pyperclip.copy(temp_msg)
            gpt_respons = temp_msg

        print("User:_________________________________________________________")

        user_respons = chatGPTClass.ask_query(
            chatGPTClass.tabs_window_handles[-2], gpt_respons, file_address=file_address
        )
        user_asking = False
        
    else:
        print("Assistant_________________________________________________________")

        if "Reuploading..." in user_respons:
            file_address = file_address_Backup

        gpt_respons = chatGPTClass.ask_query(
            chatGPTClass.tabs_window_handles[-1],
            user_respons,
            file_address=file_address,
        )
        user_asking = True
        file_address = ""

user_respons = chatGPTClass.ask_query(
    chatGPTClass.tabs_window_handles[-2], 
    f"""Now please write a code based on the file attached in python language
    
    and consider all of the code must be in one part not seperated.
    """,
    file_address
)

code = chatGPTClass.extract_code()

while (len(code) != 1 ):
    user_respons = chatGPTClass.ask_query(
    chatGPTClass.tabs_window_handles[-2], 
    f"""
            consider all of the code must be in one part not seperated.
    """,
    ""

)
    
    code = chatGPTClass.extract_code()
    
print(code[0])



